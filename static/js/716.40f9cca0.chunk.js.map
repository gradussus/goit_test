{"version":3,"file":"static/js/716.40f9cca0.chunk.js","mappings":"iNAEAA,EAAAA,EAAAA,SAAAA,QAAyB,oDAEzB,IAAMC,EAAa,WAAe,IAAdC,EAAa,uDAAN,EACzB,OAAOF,EAAAA,EAAAA,IAAA,0BAA6BE,GACrC,E,SCKD,EAXc,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,GAA+B,EAA3BC,KAA2B,EAArBC,OAAqB,EAAbC,OACjC,OACE,2BACE,8BAAGH,KACH,gBAAKI,UAAU,MAAf,UACE,gBAAKC,IAAI,wBAAwBC,IAAI,mBAI5C,ECkCD,EAvCmB,WACjB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGAERf,IAAagB,MAAK,SAAAC,GACtBN,GAAS,kBAAMM,EAAIC,IAAV,GACV,IAJa,sDAMdC,QAAQC,IAAR,MANc,wDAAH,qDASfL,IACAF,GAAa,EACd,GAAE,KAGD,+BACID,IACA,0BACGO,QAAQC,IAAIV,GACZA,GACCA,EAAMW,KAAI,gBAAGhB,EAAH,EAAGA,OAAQiB,EAAX,EAAWA,KAAMpB,EAAjB,EAAiBA,GAAIE,EAArB,EAAqBA,OAArB,OACR,SAAC,EAAD,CAEEF,GAAIA,EACJE,OAAQA,EACRC,OAAQA,EACRiB,KAAMA,GAJDpB,EAFC,QAarB,EC7BD,EAVe,WACb,OACE,iCACE,wCACA,SAAC,EAAD,KACA,4CAGL,C","sources":["components/api/api.jsx","components/Tweet/Tweet.jsx","components/TweetsList/TweetsList.jsx","pages/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://643d5c746afd66da6af4dd4d.mockapi.io/users';\n\nconst fetchUsers = (page = 1) => {\n  return axios.get(`/?&limit=8&page=${page}`);\n};\n\nexport { fetchUsers };\n","const Tweet = ({ id, name, tweets, avatar }) => {\n  return (\n    <li>\n      <>{id}</>\n      <div className=\"App\">\n        <img src=\"../../images/goit.svg\" alt=\"React Logo\" />\n      </div>\n    </li>\n  );\n};\n\nexport default Tweet;\n","import React, { useEffect, useState } from 'react';\nimport { fetchUsers } from '../api/api';\nimport Tweet from 'components/Tweet/Tweet';\n\nconst TweetsList = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const firstPage = async () => {\n      try {\n        await fetchUsers().then(res => {\n          setItems(() => res.data);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    firstPage();\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <>\n      {!isLoading && (\n        <ul>\n          {console.log(items)}\n          {items &&\n            items.map(({ avatar, user, id, tweets }) => (\n              <Tweet\n                key={id}\n                id={id}\n                tweets={tweets}\n                avatar={avatar}\n                user={user}\n              />\n            ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default TweetsList;\n","import TweetsList from '../components/TweetsList/TweetsList';\n\nconst Tweets = () => {\n  return (\n    <>\n      <h1>TweetsList</h1>\n      <TweetsList></TweetsList>\n      <button>Load More</button>\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["axios","fetchUsers","page","id","name","tweets","avatar","className","src","alt","useState","items","setItems","isLoading","setIsLoading","useEffect","firstPage","then","res","data","console","log","map","user"],"sourceRoot":""}